THREE.TargetCamera=function(t,e,a,r){THREE.PerspectiveCamera.call(this),this.targets={},this.currentTargetName=null,this._idealObject=new THREE.Object3D,this._isTransitioning=!1,this._defaults={name:null,targetObject:new THREE.Object3D,cameraPosition:new THREE.Vector3(0,30,50),cameraRotation:void 0,fixed:!1,stiffness:.4,matchRotation:!0}},THREE.TargetCamera.prototype=Object.create(THREE.PerspectiveCamera.prototype),THREE.TargetCamera.prototype.constructor=THREE.TargetCamera,THREE.TargetCamera.prototype._translateIdealObject=function(t){var e=this._idealObject;0!==t.x&&e.translateX(t.x),0!==t.y&&e.translateY(t.y),0!==t.z&&e.translateZ(t.z)},THREE.TargetCamera.prototype._createNewTarget=function(){var t=this._defaults;return{name:t.name,targetObject:t.targetObject,cameraPosition:t.cameraPosition,cameraRotation:t.cameraRotation,fixed:t.fixed,stiffness:t.stiffness,matchRotation:t.matchRotation}},THREE.TargetCamera.prototype._determineCameraRotation=function(t){return t instanceof THREE.Euler?(new THREE.Quaternion).setFromEuler(t):t instanceof THREE.Quaternion?t:void 0},THREE.TargetCamera.prototype.addTarget=function(t){var e=this._createNewTarget();if("object"==typeof t)for(var a in t)e.hasOwnProperty(a)&&("cameraRotation"===a?e[a]=this._determineCameraRotation(t[a]):e[a]=t[a]);this.targets[t.name]=e},THREE.TargetCamera.prototype.removeTarget=function(t){t&&this.targets[t]&&delete this.targets[t],this.currentTargetName==t&&(this.currentTargetName=null)},THREE.TargetCamera.prototype.setTarget=function(t){this.targets.hasOwnProperty(t)?this.currentTargetName=t:console.warn("THREE.TargetCamera.setTarget: No target with name "+t)},THREE.TargetCamera.prototype.update=function(t){var e=this.targets[this.currentTargetName],a=this._idealObject;if(e){var r=new THREE.Vector3,o=new THREE.Quaternion,i=new THREE.Vector3;e.targetObject.matrixWorld.decompose(r,o,i),e.fixed?(this.position.copy(e.cameraPosition),this.lookAt(r)):(a.position.copy(r),a.quaternion.copy(o),void 0!==e.cameraRotation&&a.quaternion.multiply(e.cameraRotation),this._translateIdealObject(e.cameraPosition),this.position.lerp(a.position,e.stiffness),e.matchRotation?this.quaternion.slerp(a.quaternion,e.stiffness):this.lookAt(r))}};
